plugins {
    id 'com.enonic.xp.app' version '1.0.17'
    id "com.moowork.node" version "1.1.1"
}

app {
    name = project.appName
    displayName = 'React Starter Kit'
    vendorName = 'Enonic AS'
    vendorUrl = 'http://enonic.com'
    systemVersion = "${xpVersion}"
}

node {
    download = true
    version = '6.9.2'
}


dependencies {
    include "com.enonic.xp:lib-repo:${xpVersion}"
    include "com.enonic.xp:lib-node:${xpVersion}"
    compile "com.enonic.xp:core-api:${xpVersion}"
    compile "com.enonic.xp:portal-api:${xpVersion}"
    include "com.enonic.xp:lib-content:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include "com.enonic.xp:lib-io:${xpVersion}"
    include "com.enonic.xp:lib-mustache:${xpVersion}"
    include "com.enonic.xp:lib-thymeleaf:${xpVersion}"

    include "com.enonic.lib:lib-router:1.0.1"
    include 'com.enonic.lib:util:1.3.0'
    include 'com.enonic.lib:lib-cache:1.1.0'

    include group: 'org.jdom', name: 'jdom', version: '2.0.2'
    include group: 'org.json', name: 'json', version: '20180813'
    include group: 'jaxen', name: 'jaxen', version: '1.1.6'
}

repositories {
    mavenLocal()
    jcenter()
    xp.enonicRepo()
    maven {
        url 'http://repo.enonic.com/public'
    }
}



npmInstall.inputs.file("package.json")
npmInstall.inputs.file("package-lock.json")
npmInstall.outputs.dir("node_modules")


// Transpile .js and .es6 files under src/main/resources.
// These are "pure XP" source code files, not JS (and react) assets. Those must be transpiled separately, by the webpackReact4xp task below.
// This is currently done by reserving .es6 and .js files below src/main/resources/ for this task,
// while reserving .JSX files under that, and all relevant extensions in other locations, for the webpackReact4xp task.
task babelXP(type: NodeTask) {
    script = file('node_modules/babel-cli/bin/babel.js')
    args = ["src/main/resources", "--out-dir", "build/resources/main", "--ignore", "**/*.jsx"]

    inputs.dir 'src/main/resources'
    outputs.dir("build/resources/main")
}
babelXP.dependsOn += 'npmInstall'
babelXP.dependsOn += 'processResources'


// TODO: Define "webpack.config.constants.json" as a constant. Use it in the inputs.file below IF EXISTS. Also use that to look for overrides over "src/main/react4xp", "build/resources/main/react4xp" and "src/main/resources/site".
// TODO: react4xp-buildconstants should use webpack.config.constants.json as the override value source instead of allowing argument overrides.
// TODO: the webpack scripts below can be put into NPM and run directly from i.e. "node_modules/reac4xp/"?
task webpack_r4xp_core(type: NodeTask) {
    script = file('node_modules/webpack/bin/webpack.js')
    args = [
        '--config', 'webpack.config.react4xp.externals.js', 
        '--config', 'webpack.config.react4xp.nashornPolyfills.js', 
        '--config', 'webpack.config.react4xp.core.js', 
        '--progress', '--color'
    ]
    inputs.file("webpack.config.react4xp.externals.js")
    inputs.file("webpack.config.react4xp.nashornPolyfills.js")
    inputs.file("webpack.config.react4xp.core.js")

    inputs.file("webpack.config.constants.json")
    inputs.file("package.json")
    inputs.file("package-lock.json")

    inputs.dir("src/main/react4xp")
    outputs.dir("build/resources/main/react4xp")
}
webpack_r4xp_core.dependsOn += 'npmInstall'


task webpack_react4xp_components(type: NodeTask) {
    script = file('node_modules/webpack/bin/webpack.js')
    args = [
        '--config', 'webpack.config.react4xp.js', 
        '--progress', '--color'
    ]

    inputs.file("webpack.config.react4xp.js")
    inputs.dir("src/main/resources/site")

    inputs.file("webpack.config.constants.json")
    inputs.file("package.json")
    inputs.file("package-lock.json")

    inputs.dir("src/main/react4xp")
    outputs.dir("build/resources/main/react4xp")

    /*doLast {
         file("build/resources/main/assets/index.html").renameTo(file("build/resources/main/index.html"))
    }*/
}
webpack_react4xp_components.dependsOn += 'npmInstall'

jar.dependsOn += 'webpack_r4xp_core'
jar.dependsOn += 'webpack_react4xp_components'


// processes your package.json before running webpack
jar.dependsOn babelXP

jar.outputs.dir('build/libs')
