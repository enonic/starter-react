// Webpack for transpiling externals (aka vendors) chunk/asset file, for gathering up heavy and rarely-changed
// (and so, nicely cacheable) libs and dependencies - React etc.
// Basis for externals (affects other transpilations too): <env.REACT4XP_CONFIG_FILE>, delivered by react-buildconstants and its config/overrides
//
// Output, externals.[contentHash].js, is content-hashed file name for cache busting, hash is stored for
// runtime reference in commonChunks.json.

const path = require('path');
const fs = require('fs');

const Chunks2json = require('chunks-2-json-webpack-plugin');


function autogenerateExternalsSourceAndGetFilename(externals, outputFileName) {
    let externalsImports = "";
    let externalsExports = "";

    Object.keys(externals).forEach( key => {
        externalsImports += `import ${externals[key]} from '${key}';\n`;
    });

    /*Object.keys(externals).forEach( key => {
        externalsImports += `console.log('${externals[key]}: ' + ${externals[key]});\n`;
    }); //*/

    Object.keys(externals).forEach( key => {
        externalsExports += `\twindow.${externals[key]} = ${externals[key]};\n`;
    });

    const externalsES6 = `// AUTO-GENERATED by ${__filename}\n\n` +
        externalsImports +
        "\n(function(window) {\n" +
        externalsExports +
        "} )(typeof window !== 'undefined' ? window : global);\n"

    fs.writeFileSync(outputFileName, externalsES6);

    return outputFileName;
}



module.exports = env => {
    const {
        SRC_R4X, BUILD_R4X, RELATIVE_BUILD_R4X, BUILD_ENV, EXTERNALS
    } = require(env.REACT4XP_CONFIG_FILE);

    return {
        mode: BUILD_ENV,

        entry: {
            // First autogenerates an externals sourcefile, and then lets webpack have its filename in order to transpile it
            'externals': autogenerateExternalsSourceAndGetFilename(
                EXTERNALS,
                path.join(SRC_R4X, '_AUTOGENERATED_externals_.es6')
            ),
        },

        output: {
            path: BUILD_R4X,  // <-- Sets the base url for plugins and other target dirs. Note the use of {{assetUrl}} in index.html (or index.ejs).
            filename: "[name].[contenthash:9].js",
        },

        resolve: {
            extensions: ['.es6', '.js', '.jsx']
        },
        module: {
            rules: [
                {
                    test: /\.((jsx?)|(es6))$/,
                    exclude: /node_modules/,
                    loader: 'babel-loader',
                    query: {
                        compact: (BUILD_ENV === 'production'),
                    }
                }
            ]
        },

        plugins: [
            new Chunks2json({outputDir: RELATIVE_BUILD_R4X, filename: 'chunks.externals.json'}),
        ],
    };
};
